name: CMake

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    name: Build on ${{matrix.platform}} with compiler ${{matrix.compiler}} in ${{matrix.build}} mode, with editor ${{matrix.editor}}. Optional toolset is [${{matrix.toolset}}].
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-20.04, windows-latest]
        compiler: [g++, clang++, msvc]
        build: [Debug, Release]
        editor: [ON, OFF]
        
        exclude: 
          - platform: ubuntu-20.04
            compiler: msvc

          - platform: windows-latest
            compiler: g++
            
        include:
          - platform: windows-latest
            compiler: clang++
            toolset: -T ClangCL
            
    runs-on: ${{ matrix.platform }}

    steps:
    - uses: actions/checkout@v2

    - name: Download git submodules
      run: git submodule update --init --recursive

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{runner.workspace}}/build
      
    - name: Install GLFW dependencies
      shell: bash
      working-directory: ${{runner.workspace}}/build
      if: matrix.platform == 'ubuntu-20.04'
      run: sudo apt update && sudo apt-get install xorg-dev libglu1-mesa-dev
    
    - name: Install Qt
      uses: jurplel/install-qt-action@v2.9.0
            
    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{runner.workspace}}/build
  
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12      
      run: cmake $GITHUB_WORKSPACE -DCMAKE_CXX_COMPILER=${{ matrix.compiler }} -DCMAKE_BUILD_TYPE=${{ matrix.build }} -DBUILD_EDITOR=${{ matrix.editor }} -DCMAKE_DISABLE_FIND_PACKAGE_WindowsSDK=ON -DQt5_DIR=Qt5_DIR ${{ matrix.toolset }}

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --build . --config $BUILD_TYPE
